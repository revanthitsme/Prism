import numpy as np
import random

class Node:
	def __init__(self,id,speed,gen_blk,mining_block,hash_power):
		self.id = id
		self.speed= speed # fast(1) or slow(0) node
		self.genesis_blk = gen_blk
		self.mining_blk = mining_block #block on which mining happens at a time instant
		self.trxn_cnt = 0 # count of trxns generated by node
		self.blk_cnt = 0 # count of blocks generated by node
		self.trxn_pool=[] # all trxns seen so far 
		self.peers = [] # list of link object
		self.orphan_blocks = [] # list of blocks whose parents not seen
		self.timestamp_list = [] # list used to store arrival times of blocks
		self.hash_power = hash_power # hash power of node

class Trxn:
	def __init__(self,txnID,F,to,coins): #payer and payee are id's
		self.id = txnID
		self.payer = F
		self.payee = to
		self.coins = coins

class link:
	def __init__(self,j,r_ij,c_ij): #j is id
		self.j = j
		self.r_ij = r_ij #speed of light propogation
		self.c_ij = c_ij #link speed

# class SuperBlock:
# 	def __init__(self,blk_id,parent_id,trxn_list,level,parent_ptr):
# 		self.blk_id = blk_id
# 		self.parent_id = parent_id
# 		self.trxn_list = trxn_list
# 		self.level = level # level of blk in blockchain
# 		self.parent_ptr = parent_ptr # parent pointer
# 		self.child_ptr_list = [] # list of child pointers

class SuperBlock:
	def __init__(self,blk_id,parent_id,trxn_list,level,parent_ptr):
		self.blk_id = blk_id
		self.parent_id = parent_id
		self.trxn_list = trxn_list
		self.level = level # level of blk in blockchain
		self.parent_ptr = parent_ptr # parent pointer
		self.child_ptr_list = [] # list of child pointers

class TxnBlock:
	def __init__(self,blk_id,trxn_list):
		self.blk_id = blk_id
		self.trxn_list = trxn_list
		# self.level = level # level of blk in blockchain
		# self.parent_ptr = parent_ptr # parent pointer
		# self.child_ptr_list = [] # list of child pointers

class ProsporerBlock:
	def __init__(self,blk_id,parent_id,trxn_pool,level,):
		self.blk_id = blk_id
		self.parent_id = parent_id
		self.trxn_block_list = trxn_block_list
		self.prop_block_list = prop_block_list
		self.level = level # level of blk in blockchain
		self.parent_ptr = parent_ptr # parent pointer
		

class VoterBlock:
	def __init__(self,blk_id,parent_id,level,chain,parent_ptr, votes):
		self.blk_id = blk_id
		self.parent_id = parent_id
		self.level = level # level of blk in voterchain
		self.chain = chain
		self.parent_ptr = parent_ptr # parent pointer
		self.votes = self.votes #ids of proposer block